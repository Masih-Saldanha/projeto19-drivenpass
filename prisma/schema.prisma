generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Users {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  cards         Cards[]
  credentials   Credentials[]
  secureNotes   SecureNotes[]
  wifiPasswords WifiPasswords[]

  @@map("users")
}

model Credentials {
  id       Int    @id @default(autoincrement())
  title    String
  url      String
  user     String
  password String
  userId   Int
  users    Users  @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("credentials")
}

model SecureNotes {
  id     Int    @id @default(autoincrement())
  title  String @db.VarChar(50)
  note   String @db.VarChar(1000)
  userId Int
  users  Users  @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("secureNotes")
}

model Cards {
  id             Int     @id @default(autoincrement())
  title          String
  number         String
  name           String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           Card
  userId         Int
  users          Users   @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("cards")
}

model WifiPasswords {
  id       Int    @id @default(autoincrement())
  title    String
  name     String
  password String
  userId   Int
  users    Users  @relation(fields: [userId], references: [id])

  @@map("wifiPasswords")
}

enum Card {
  credit
  debit
  both
}
